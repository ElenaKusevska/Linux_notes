simple commands: i, a, o, u, /, f5, q, w, ,wq, gg, G, dn

#-----------------------------------
# To comment out blocks in vim:
#-----------------------------------

    press Esc (to leave editing or other mode)
    hit ctrl+v (visual block mode)
    use the up/down arrow keys to select lines you want (it won't highlight everything - it's OK!)
    Shift+i (capital I)
    insert the text you want, i.e. %
    press EscEsc

#--------------------------------
# To uncomment blocks in vim:
#--------------------------------

    press Esc (to leave editing or other mode)
    hit ctrl+v (visual block mode)
    use the up/down arrow keys to select the lines to uncomment.

    If you want to select multiple characters, use one or combine these methods:
        use the left/right arrow keys to select more text
        to select chunks of text use shift + left/right arrow key
        you can repeatedly push the delete keys below, like a regular delete button

    press d or x to delete characters, repeatedly if necessary

#----------------------------------------
# To change color scheme:
#----------------------------------------

cd /usr/share/vim/vim74/colors
colo desert # for example (in current file, or vimrc to make permanent)
# if colors are not changing - check permissions (read) of color files

#----------------------------------------
# retab
#----------------------------------------


http://ppanyukov.github.io/2011/06/29/retabbing-in-vim.html


Retabbing files using VIM

Recently Ive made a mistake of using 2 spaces to indent my F# program. After some thought I decided to stick to 4 spaces like everyone else does.

Here is how it looked:

module foomodule
  let foo = 
    let bar = 
      get_file_names()
      |> Seq.filter (f -> f.EndsWith(".cs")
    let bar2 = do_something_with_bar bar
    bar2

And here is how I wanted it to look

module foomodule
    let foo = 
        let bar = 
            get_file_names()
            |> Seq.filter (f -> f.EndsWith(".cs")
        let bar2 = do_something_with_bar bar
        bar2

What to do? This is not as trivial as it may look. But not if use use VIM!

Here is how to retab everything using VIM:

Step 0. (Optional) Tell VIM to show whitespace:

:set listchars=tab:→\ ,space:·
:set list

Step 1. Tell VIM what the the current tabsize is:

:set tabstop=2      " Tab size is 2 spaces

Step 2. Convert spaces to real tabs:

:set noexpandtab    " Use real tab instead of space
:retab!             " Replace all space-tabs with real tabs

Step 3. Convert real tabs back to spaces, using tabsize 4

:set tabstop=4      " 4 spaces for each tab
:set expandtab      " User spaces instead ot tab
:retab              " Reformat using new tabbing policy

Its possible to get all this on one line:

:set ts=2 noet | retab! | set et ts=4 | retab

